# Generated by Django 2.2.1 on 2019-06-19 00:15

import demandai_site.validators
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=60, null=True)),
                ('email', models.CharField(max_length=60, unique=True)),
                ('role', models.CharField(choices=[('AD', 'Administrador'), ('SE', 'Servidor'), ('PE', 'Proex'), ('DI', 'Diem'), ('PI', 'Propi'), ('TE', 'Técnico')], default='SE', max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Demand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('action', models.CharField(choices=[('SER', 'Serviço'), ('LAB', 'Laboratorio'), ('EQU', 'Equipamento')], max_length=3)),
                ('action_id', models.IntegerField()),
                ('nome', models.CharField(max_length=30)),
                ('telefone', models.CharField(blank=True, max_length=16, null=True)),
                ('codigo', models.CharField(max_length=6)),
                ('email', models.EmailField(max_length=40)),
                ('descricao', models.TextField()),
                ('status', models.CharField(choices=[('S', 'Solicitado'), ('E', 'Analise'), ('R', 'Recusada'), ('A', 'Aceita'), ('P', 'Produção'), ('F', 'Finalizada')], default='S', max_length=1)),
                ('file', models.FileField(blank=True, null=True, upload_to='images/demand_files', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['zip']), demandai_site.validators.validate_file_size])),
                ('visualizada', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('nome', models.CharField(max_length=60)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('descricao', models.TextField()),
                ('phone', models.CharField(max_length=30)),
                ('site', models.CharField(max_length=60)),
                ('status', models.BooleanField()),
                ('street', models.CharField(max_length=100)),
                ('number', models.CharField(max_length=11)),
                ('sector', models.CharField(max_length=60)),
                ('city', models.CharField(max_length=30)),
                ('complement', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('plataformas', models.TextField()),
                ('descricao', models.TextField()),
                ('nome', models.CharField(max_length=30)),
                ('servidores', models.TextField()),
                ('desenvolvedores', models.TextField()),
                ('departamentos', models.TextField()),
                ('status', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institution', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='demandai_administrador.Institution')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='services', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Laboratory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('telefone', models.CharField(max_length=14)),
                ('descricao', models.TextField()),
                ('nome', models.CharField(max_length=30)),
                ('atividades_realizadas', models.TextField()),
                ('pesquisa_extensao', models.BooleanField()),
                ('endereco_sala', models.CharField(max_length=40)),
                ('servidores', models.TextField()),
                ('departamentos', models.TextField()),
                ('cursos', models.TextField()),
                ('status', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='laboratories', to='demandai_administrador.Institution')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='laboratories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('codigo', models.CharField(max_length=9)),
                ('descricao', models.TextField()),
                ('nome', models.CharField(max_length=30)),
                ('status', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='equipments', to='demandai_administrador.Institution')),
                ('laboratory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equipments', to='demandai_administrador.Laboratory')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='equipments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DemandCallback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.DateTimeField(editable=False, null=True)),
                ('action', models.CharField(choices=[('SER', 'Serviço'), ('LAB', 'Laboratorio'), ('EQU', 'Equipamento')], max_length=3)),
                ('action_id', models.IntegerField()),
                ('feedback', models.TextField()),
                ('prazo_feedback', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('demand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='demand_callback', to='demandai_administrador.Demand')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='institution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='profile', to='demandai_administrador.Institution'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
